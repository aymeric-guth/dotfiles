#!/bin/sh

. "$ZDOTDIR/func/cleanup.sh"
. "$ZDOTDIR/func/_syncthing.sh"
. "$ZDOTDIR/func/_starters.sh"
. "$ZDOTDIR"/func/aws.sh


cmake_inspect() {
    if [ ! -f ./CMakeLists.txt ]; then
        echo "CMakeLists not found"
        return 1
    fi
    if [ -d ./build ]; then
        rm -rf ./build
    fi
    mkdir build && cd build || return 1
    cmake ..
    cmake -LA | awk '{if(f)print} /-- Cache values/{f=1}'
}

my-zsh-prof() {
  for i in $(seq 1 10); do /usr/bin/time $(which zsh) -i -c exit; done;
}

swap() {
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

# create a do-ls function
# Make sure to use emulate -L zsh or
# your shell settings and a directory
# named 'rm' could be deadly
# https://github.com/rothgar/mastering-zsh/blob/master/docs/config/hooks.md
do-ls() {
    emulate -L zsh
    lsd -la
}

autols-enable() {
    add-zsh-hook chpwd do-ls
}

# https://stackoverflow.com/questions/42109673/how-to-remove-a-z-shell-precmd-function
autols-disable() {
    add-zsh-hook -d chpwd do-ls
}

# ch - browse chrome history
ch() {
	prev="$PWD"
	cd "$DEV"/personal/yt_hist || return 1
	cols="$((COLUMNS / 3))"
	sep='{::}'
	python main.py "$COLUMNS" "$sep" |
		awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\x1b[m\n", $1, $2}' |
		fzf --ansi --multi |
		sed 's#.*\(https*://\)#\1#' |
		xargs open
	cd "$prev" || return 1
}

chf() {
	# https://gist.github.com/dshnkao/10865f32d69e40dc591e08e3af970e9d
	local cols sep
	cols=$((COLUMNS / 3))
	sep='{::}'

	historyfile="$HOME/.mozilla/firefox/z6833bcl.default-release/places.sqlite"
	[ ! -f "$historyfile" ] && return 1 || cp "$historyfile" /tmp/h
	DB_PATH=/tmp/h

	QUERY="
  SELECT
      url, title FROM moz_places
  WHERE
      url NOT LIKE '%google%search%'
  ORDER BY
      visit_count DESC,
      last_visit_date DESC;
  "

	SEP="âˆ™"

	ENTRY=$(
		sqlite3 "$DB_PATH" "$QUERY" |
			sed -E 's/^https?:\/\///' |
			sed -E "s/\\/?\\|/ $SEP /" |
			sed -E "s/$SEP $//" |
			fzf
	)

	URL=$(echo "$ENTRY" | sed "s/$SEP.*//g")
	[ -z "$URL" ] && return 0 || open "https://$URL"
}
