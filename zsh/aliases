#!/bin/sh

# croc --pass YOURPASSWORD --relay "myreal.example.com:9009" send [filename]
# --pass FILEWITHPASSWORD
# ansible-vault, keepass

if command -v lsd 1> /dev/null; then
  alias ll='XDG_CONFIG_DIR=$DOTFILES lsd -lh'
  alias la='XDG_CONFIG_DIR=$DOTFILES lsd -lA'
else
  alias ll='ls -lh'
  alias la='ls -la'
fi

alias ..='cd ..'
alias ...='cd ../..'
alias grep='LC_ALL=C  grep --color=auto'
#alias grep='LC_ALL=C  grep --color=auto --exclude-dir={.av-mp}'

alias df='df -h'     # human-readable sizes
# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

cfg() {
    if [ -n "$TMUX" ] || [ -n "$SSH_CLIENT" ]; then
      editor "$DOTFILES"
    else
      tmuxp-start "$DOTFILES"
    fi
}

v() { editor "$@"; }
mux() { tmuxp-start "$TMUXP_CONFIGDIR/anonymous"; }
alias muxd="tmuxp debug-info"
alias k="k3s kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml"
alias r="run"
alias b="build"
alias lz="lazygit"
setenv() { 
  if [ -n "$TMUX" ] || [ -n "$SSH_CLIENT" ]; then
    editor "$DOTFILES/env/.env-$(uname -n)"
  else
    TMUX_TEMPLATE=".tmuxp-2.yaml" tmuxp-start "$DOTFILES"
  fi
}

kb() { TMUX_TEMPLATE=".tmuxp-1.yaml" tmuxp-start "$DOTFILES"; }

alias fdi="fd --no-ignore-vcs --no-ignore-parent --hidden"
alias rgi="rg --no-ignore-vcs --no-ignore-parent --hidden"

exe() {
  return 1
}
alias E="exe"

alias glow='glow --config $DOTFILES/glow.yml'
alias g='glow --config $DOTFILES/glow.yml'

jw() {
  [ -d "$WORKSPACE" ] && cd "$WORKSPACE" || return 1
}
alias pudb='XDG_CONFIG_HOME=$DOTFILES pudb'
# [ -n DEBUG ] && alias python3='XDG_CONFIG_HOME=$DOTFILES pudb'
