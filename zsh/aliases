#!/bin/sh

if command -v lsd 1>/dev/null; then
	alias ll='XDG_CONFIG_DIR=$DOTFILES lsd -lh'
	alias la='XDG_CONFIG_DIR=$DOTFILES lsd -lA'
else
	alias ll='ls -lh'
	alias la='ls -la'
fi

if ! command -v fd 1>/dev/null; then
	fd() {
		/usr/bin/find . -iname "*${1}*"
	}
fi

alias ..='cd ..'
alias ...='cd ../..'
alias grep='LC_ALL=C  grep --color=auto'

v() {
	_cb="$(xclip -selection clip -o)"
	[ -f "$_cb" ] && $EDITOR "$_cb" || $EDITOR "$*"
}

alias fdi="fd --no-ignore-vcs --no-ignore-parent --hidden"
alias rgi="rg --no-ignore-vcs --no-ignore-parent --hidden --ignore-case"

jw() {
	[ -d "$WORKSPACE" ] && cd "$WORKSPACE" || return 1
}

fn() {
	[ -z "$WORKSPACE" ] && return 1
	$EDITOR "$WORKSPACE/.func.sh" && . "$WORKSPACE/.func.sh"
}

de() {
	direnv edit "$@"
}

da() {
	direnv allow "$@"
}

dt() {
	python3 -c 'import datetime;import sys; sys.stdout.write(str(datetime.datetime.fromtimestamp(int(sys.argv[1]))))' $@
}

alias g-cp='git rev-parse HEAD | tr -d '\n' | cb-copy'
alias g-sm='git add . && git commit -m "Update submodules"'
alias g-pm='git push -u origin master'
alias g-ig='git add .gitignore && git commit -m "Update .gitignore"'
alias g-cm='git commit -m '

_img_slideshow() {
	mpv \
		--image-display-duration=10 \
		--loop-playlist=inf \
		--fullscreen \
		--shuffle \
		"${1:-.}"
}
alias img_slide='_img_slideshow'
jk() {
	[ -d "$DEV"/personal/jk ] || return 1
	_path="$DEV"/personal/jk
	"$_path"/.venv/bin/python "$_path"/jk.py "$@"
	direnv allow "$@"
}
